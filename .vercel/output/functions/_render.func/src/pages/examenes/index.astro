---
import { getCollection, type CollectionEntry } from 'astro:content'; 
import Layout from '../../layouts/Layout.astro';
import Nav from '../../components/Nav.astro';
/* Importa el nuevo componente */
import SearchExams from '@/components/searchExams.astro';
/* Definir el tipo para el objeto agrupador */
type GroupedExamenes = Record<string, CollectionEntry<'examenes'>[]>; 

const allExamenes = await getCollection('examenes');

const groupedExamenes: GroupedExamenes = allExamenes.reduce((acc, examen) => {
    const category = examen.data.category; 
    if (!acc[category]) {
        acc[category] = [];
    }
    acc[category].push(examen);
    return acc;
}, {} as GroupedExamenes); 

const categories = Object.keys(groupedExamenes).sort();

/* üí° FUNCI√ìN A√ëADIDA PARA SIMPLIFICAR EL RENDERIZADO DEL PRECIO */
const formatPrice = (price: number): string => {
    return price.toLocaleString('es-ES', { style: 'currency', currency: 'USD' });
};

// ‚ùå Se elimina categorySections de aqu√≠. El mapeo se hace en el HTML.

---
<Layout title="IDI - Ex√°menes">
    <Nav />
    
    <main class="container mx-auto px-4 pt-24 pb-16 animate-blurred-fade-in">
        <header class="text-center mb-12">
            <h1 class="text-5xl font-extrabold leading-tight text-gray-900 mb-4">
                Listado de Ex√°menes
            </h1>
            <p class="text-xl text-gray-600 max-w-2xl mx-auto">
                Explora nuestro cat√°logo de an√°lisis especializados...
            </p>
        </header>

        <div class="max-w-6xl mx-auto">
            
            {/* üí° INTEGRACI√ìN DEL COMPONENTE DE B√öSQUEDA */}
            <SearchExams allExamenes={allExamenes} client:load />

            {/* üí° IMPLEMENTACI√ìN DE SECCIONES COLAPSABLES CON <details>/<summary> */}
            {categories.map((category, index) => (
                // Usamos <details> en lugar de <section>
                <details 
                    class="mb-8 category-section group" 
                    key={category} 
                    // üí° CAMBIO: Se ELIMINA el atributo 'open', lo que asegura que todas las secciones est√©n colapsadas por defecto.
                >
                    {/* El encabezado que se hace clic para colapsar */}
                    <summary 
                        class="cursor-pointer list-none py-3 px-4 rounded-lg bg-indigo-50 hover:bg-indigo-100 transition duration-200 border border-indigo-200 shadow-md flex justify-between items-center focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-opacity-50"
                    >
                        <h2 class="text-2xl font-bold text-indigo-700 m-0">
                            {category}
                        </h2>
                        {/* √çcono de flecha para indicar colapso */}
                        {/* La flecha ahora apuntar√° a la derecha cuando est√© colapsada y rotar√° 90 grados al abrirse */}
                        <svg class="w-6 h-6 text-indigo-600 transform transition duration-300 group-open:rotate-90" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                        </svg>
                    </summary>
                    
                    {/* El contenido colapsable */}
                    <div class="pt-6 pb-2 animate-">
                        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
                            {groupedExamenes[category].map((examen) => (
                                // Usamos retorno impl√≠cito simple para la tarjeta <a>
                                <a 
                                    href={`/examenes/${examen.slug}`} 
                                    class="block p-5 bg-white rounded-lg shadow-lg hover:shadow-xl transform hover:scale-[1.01] transition duration-300 border-t-4 border-blue-500"
                                    key={examen.slug} // A√±adida key
                                >
                                    <h3 class="text-xl font-bold text-gray-800 mb-2">{examen.data.title}</h3>
                                    <p class="text-sm text-gray-600 mb-3 line-clamp-2">{examen.data.description}</p>
                                    <div class="flex justify-between items-center pt-2 border-t border-gray-100">
                                        <span class="text-sm font-semibold text-blue-600 uppercase">{examen.data.tipoExamen}</span>
                                        <span class="text-lg font-extrabold text-green-700">
                                            {formatPrice(examen.data.price)}
                                        </span>
                                    </div>
                                </a>
                            ))}
                        </div>
                    </div>
                </details>
            ))}
        </div>
    </main>
</Layout>
